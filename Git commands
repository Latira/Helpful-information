git add File.md             - добавление файла File.md 
git add -A                  - добавить все файлы в репозитории (быстрая запись) (и выше, и ниже) в staging area
git add .                   - добавляет все файлы на этом уровне и ниже
git branch                  - просмотр локальных веток (будет выведен список веток и звездочкой отмечена та ветка, в которой мы сейчас находимся)
git branch new-branch       - создание новой ветки new-branch
git checkout                - переход в ветку или перемещение указателя на другой существующий коммит
git checkout -b branch      - создание новой ветки branch и переход в нее
git cherry-pick             - создает новый коммит в текущей ветке, содержащий изменения из указанного коммита
git cherry-pick #commit     - забирает определенный коммит в свою ветку
git clone https://...       - копирование удаленного репозитория на локальный компьютер
git commit                  - "фиксация" изменений, который были уже отложены в staging area (команда git add)
git commit -m '...'         - 
git commit -- amend         - внесение изменений в последний коммит
git config user.name "Latira" (git config --global user.name "Latira")
git config user.email "Latira@g.com" (git config --global user.email "Latira@g.com")
git config --global --list (список всех глобальных конфигов) (--local - локальных)
git diff                    - выводит изменения, не внесенные отдельным коммитом
git fetch                   - выкачивает все ветки с изменениями из гита на локальный компьютер, без обновления локального репозитория
git init                    - инициализирование папки для работы с гитом (будут автоматически выставлены все настройки)
git merge master            - получение всех изменений из ветки master в текущую ветку
git merge master new-branch - получение всех изменений из ветки master в ветку new-branch
git pull                    - (делать из ветки main) синхронизация удаленного содержимого с локальным (git push наоборот)
git push                    - отправка локальных изменений ("зафиксированных" командой git commit) на удаленный репозиторий
git push origin branch      - отправление на гитхаб в "Origin" в ветку "branch"
git push --set-upstream origin branch - отправление и создание на гитхабе в "Origin" ветки "branch"
git push --forse            - (ОЧЕНЬ ОСТОРОЖНО) перезаписывает историю коммитов после git rebase
git rebase master           - перебазирование всех коммитов в новое местоположение после последних изменений в ветке master (от последней версии master пересоздаются все наши коммиты (которые начинались в одной из предыдущей версии master))
git rebase -i master        - интерактивное перебазирование в "свежий" master (pick - берем коммит, ... - удаляем коммит, fixup - объединям коммит)
git rebase -i HEAD-3        - перебазирование внутри одной ветки, где HEAD - ссылка на "голову" ветки (последний коммит, текущее положение), 3 - сдвиг на 3 коммита левее 
git remote                  - просмотр удаленных репозиториев (покажет только origin)
git remote -v               - более подробный просмотр (покажет ссылки откуда мы получаем данные (fetch) и куда отправляем (push)
git remote add origin https://... - добавление ссылки (например, на гитхаб) в "Origin" (связь локального репозитория с удаленным) (ссылка совпадает с ссылкой, используемой при клонировании)
git remote get-url origin   - просмотр ссылки, которая соотносится с удаленным репозиторием origin 
git reset                   - сброс изменений в репозтории до определенного, указанного нами коммита (--soft сбросит только коммиты, -- mixed сбросит и коммиты и отправку в staging area)
git revert                  - создает новый коммит, применяющий изменения, обратные для указанного аргументом коммита
git show                    - выводит изменения, внесенные отдельным коммитом (по хэшу коммита)
git status                  - показывает состояние файлов в рабочей директории








